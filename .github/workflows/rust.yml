name: Rust

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-upload:
    name: Build and Upload
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # You can add more, for any target you'd like!
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin

          - build: windows-gnu
            os: windows-latest
            target: x86_64-pc-windows-gnu

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        # Or @nightly if you want
        uses: dtolnay/rust-toolchain@stable
        # Arguments to pass in
        with:
          # Make Rust compile to our target (defined in the matrix)
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --verbose --release

      - name: Run tests
        run: cargo test --verbose

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          # Replace with the name of your binary
          binary_name="<BINARY_NAME>"

          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          fi

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: Upload the binaries
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET }}

      # - name: Build and upload Rust binary to GitHub Releases
      #   uses: taiki-e/upload-rust-binary-action@v1.20.0
      #   with:
      #     changelog: CHANGELOG.md
      #     token: ${{ secrets.GITHUB_TOKEN }}

  # upload-assets:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: taiki-e/upload-rust-binary-action@v1
  #       with:
  #         # (required) Comma-separated list of binary names (non-extension portion of filename) to build and upload.
  #         # Note that glob pattern is not supported yet.
  #         bin: ...
  #         # (required) GitHub token for uploading assets to GitHub Releases.
  #         token: ${{ secrets.GITHUB_TOKEN }}
